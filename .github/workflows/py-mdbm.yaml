name: py-mdbm
on: ["push", "pull_request"]
jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.4", "3.5", "3.6", "3.7","3.8", "3.9", "3.10", "pypy3.7", "pypy3.8", "pypy3.9"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - name: Install dependencies
      run: |
        sudo apt update -qq -y
        DEBIAN_FRONTEND=noninteractive sudo apt-get install -y --no-install-recommends tzdata
        sudo apt install -qq -y openssl libcppunit-dev libreadline7 libreadline-dev valgrind libmodule-install-perl gdb php-dev git
        curl -ss -L -O https://github.com/torden/go-mdbm/raw/master/pkg/ubuntu/mdbm-4.13.0-Bionic_Beaver.deb
        sudo dpkg -i mdbm-4.13.0-Bionic_Beaver.deb
        sudo dd of=/etc/ld.so.conf <<EOF
        include /etc/ld.so.conf.d/*.conf
        /usr/local/mdbm/lib64
        /usr/lib/php
        EOF
        sudo ldconfig -v

    - name: Build_Test
      run: |
        #CFLAGS="-Wl,-rpath=/usr/local/mdbm/lib64/" make
        #CFLAGS="-Wl,-rpath=/usr/local/mdbm/lib64/" make test
        make clean build test
        
    - name: Job fail
      continue-on-error: true
      run: |
        CFLAGS="-Wl,-rpath=/usr/local/mdbm/lib64/" gdb -ex "thread apply all bt" -ex "set pagination 0" -batch --args `which python` tests/test.py 

  memory_leak_python2:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        mkdir tmp
        cd tmp
        curl -ss -O https://www.python.org/ftp/python/2.7.2/Python-2.7.2.tgz
        tar xvzf Python-2.7.2.tgz
        cd Python-2.7.2
        ./configure --prefix=/tmp/python2 --without-pymalloc --with-pydebug --with-valgrind
        make OPT=-g -j4
        sudo make install
        cd ../../

    - name: Build_Test
      run: |
        CMD_PYTHON=/tmp/python2/bin/python make clean build testleak

  memory_leak_python3:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        mkdir tmp
        cd tmp
        curl -ss -O https://www.python.org/ftp/python/3.10.6/Python-3.10.6.tgz
        tar xvzf Python-3.10.6.tgz
        cd Python-3.10.6
        ./configure --prefix=/tmp/python3 --without-pymalloc --with-pydebug --with-valgrind
        make OPT=-g -j4
        sudo make install
        cd ../../

    - name: Build_Test
      run: |
        CMD_PYTHON=/tmp/python3/bin/python make clean build testleak


